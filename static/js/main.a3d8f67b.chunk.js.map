{"version":3,"sources":["task1/components/ColorInput.js","task1/utils/utils.js","task1/components/ColorForm.js","task1/ColorView.js","task2/components/DateInput.js","task2/components/DistanceInput.js","task2/models/WalkModel.js","task2/utils/utils.js","task2/components/WalkAddForm.js","task2/components/WalkString.js","task2/components/WalkList.js","task2/utils/array.js","task2/Walks.js","App.js","index.js"],"names":["ColorInput","props","input","onChange","className","name","value","event","target","hexDecode","color","result","r","parseInt","slice","g","b","hexToRGB","rgb","ColorForm","state","onChangeInput","background","Math","trunc","toString","length","hexEncode","getContrastColor","onSubmit","preventDefault","style","backgroundColor","ColorView","useState","setColor","setInput","setState","inputValue","newState","test","isHexColor","DateInput","DistanceInput","WalkModel","id","date","distance","this","initForm","dateToText","timestamp","moment","format","distanceToText","leftZero","toFixed","WalkAddForm","form","dateText","setDateText","distanceText","setDistanceText","prevState","setPrevState","error","setError","Fragment","str","isValid","unix","Number","parseFloat","isNaN","distanceToInt","prev","dateTyping","distanceTyping","type","WalkString","walk","onEditClick","onDeleteClick","onClick","WalkList","walks","map","findById","array","findIndex","item","sortByDate","sort","item1","item2","Walks","setWalks","setForm","arr","index","findByDate","nanoid","splice","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3d8f67b.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport './ColorInput.css';\n\nfunction ColorInput(props) {\n  const { input, onChange } = props;\n  return <input className=\"ColorInput\" name=\"color\" value={input} onChange={(event) => onChange(event.target.value)} />\n}\n\nColorInput.propTypes = {\n  input: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default ColorInput;\n","function hexEncode(rgb) {\n  let r = rgb.r.toString(16);\n  if (r.length < 2) {\n    r = '0' + r;\n  }\n\n  let g = rgb.g.toString(16);\n  if (g.length < 2) {\n    g = '0' + g;\n  }\n  let b = rgb.b.toString(16);\n  if (b.length < 2) {\n    b = '0' + b;\n  }\n\n  return `#${r}${g}${b}`;\n}\n\nfunction hexDecode(color){\n  const result = {};\n  result.r = parseInt(color.slice(1, 3), 16);\n  result.g = parseInt(color.slice(3, 5), 16);\n  result.b = parseInt(color.slice(5), 16);\n  return result;\n}\n\nexport function hexToRGB(color) {\n  const rgb = hexDecode(color);\n  return `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`; \n}\n\nexport function isHexColor(color) {\n  return /^#[\\dA-Fa-f]{6}$/.test(color);\n}\n\nexport function getContrastColor(color) {\n  const rgb = hexDecode(color);\n  \n  rgb.r = Math.trunc(rgb.r / 2);\n  rgb.g = Math.trunc(rgb.g / 2);\n  rgb.b = Math.trunc(rgb.b / 2);\n\n  return hexEncode(rgb);\n}","import PropTypes from 'prop-types';\nimport './ColorForm.css';\nimport ColorInput from './ColorInput';\nimport { hexToRGB, getContrastColor } from '../utils/utils';\n\nfunction ColorForm(props) {\n  const { color, input, state, onChangeInput } = props;\n  const background = getContrastColor(color);\n\n  return (\n    <form className=\"ColorForm\" onSubmit={(event) => event.preventDefault()}>\n      <ColorInput input={input} onChange={onChangeInput} />\n      <label className=\"ColorForm-rgb\" style={{ backgroundColor: background }}>\n        {state ? hexToRGB(color) : 'Ошибка'}\n      </label>\n    </form>\n  );\n}\n\nColorForm.propTypes = {\n  color: PropTypes.string.isRequired,\n  input: PropTypes.string.isRequired,\n  state: PropTypes.bool.isRequired,\n  onChangeInput: PropTypes.func.isRequired\n};\n\nexport default ColorForm;\n\n","import { useState } from 'react';\nimport './ColorView.css';\nimport ColorForm from './components/ColorForm';\nimport { isHexColor } from './utils/utils';\n\nfunction ColorView() {\n  const [color, setColor] = useState('#FFFFFF');\n  const [input, setInput] = useState('#FFFFFF');\n  const [state, setState] = useState(true);\n\n  const onChangeInput = (inputValue) => {\n    if (inputValue.length < 2) {\n      setInput('#');\n    } else if (inputValue.length > 7) {\n      setInput(inputValue.slice(0, 7));\n    } else {\n      setInput(inputValue);\n    }\n\n    if (inputValue.length !== 7) {\n      return;\n    }\n\n    const newState = isHexColor(inputValue);\n    setState(newState);\n    if (newState) {\n      setColor(inputValue);\n    }\n  }\n\n  return (\n    <div className=\"ColorView\" style={{ backgroundColor: color }}>\n      <ColorForm color={color} input={input} state={state} onChangeInput={onChangeInput} />\n    </div>\n  );\n}\n\nexport default ColorView;\n","import PropTypes from 'prop-types';\nimport './DateInput.css';\n\nfunction DateInput(props) {\n  const { value, onChange } = props;\n  return (\n    <label className=\"DateInput\">\n      Дата (ДД.ММ.ГГГГ)\n      <input className=\"DateInput-input\" name=\"date\" value={value} onChange={(event) => onChange(event.target.value)} />\n    </label>\n  );\n}\n\nDateInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default DateInput;\n","import PropTypes from 'prop-types';\nimport './DistanceInput.css';\n\nfunction DistanceInput(props) {\n  const { value, onChange } = props;\n  return (\n    <label className=\"DistanceInput\">\n      Пройдено км\n      <input className=\"DistanceInput-input\" name=\"distance\" value={value} onChange={(event) => onChange(event.target.value)} />\n    </label>\n  );\n\n}\n\nDistanceInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default DistanceInput;\n","class WalkModel {\n  constructor(id, date, distance) {\n    this.id = id;\n    this.date = date;\n    this.distance = distance;\n  }\n}\n\nexport default WalkModel;\n\nexport const initForm = new WalkModel(null, null, null);\n","import moment from 'moment';\n\nexport function dateToText(timestamp) {\n  return timestamp ? moment(timestamp).format('DD.MM.YYYY') : ''; \n}\n\nexport function distanceToText(distance, leftZero) {\n  if (!distance) {\n    return '';\n  }\n  \n  let result = distance.toFixed(1);\n  if (leftZero && result.length === 3) {\n    result = '0' + result; \n  }\n  return result;\n}\n\nexport function dateTyping(prev, value) {\n  if (prev.length < value.length) {\n    if (!/\\d$/.test(value) || value.length > 10) {\n      return value.slice(0, value.length - 1);\n    } \n    \n    switch (value.length) {\n      case 2:\n        return value + '.';      \n      case 3:\n        return value.slice(0, value.length - 1) + '.' + value[value.length - 1];\n      case 5:\n        return value + '.20';\n      case 6:\n        return value.slice(0, value.length - 1) + '.20' + value[value.length - 1];\n      default:\n        return value;\n    }\n  } \n\n  if (prev.length > value.length) {\n    switch (value.length) {\n      case 3:     \n        return value.slice(0, value.length - 1);       \n      case 8:\n        return value.slice(0, value.length - 3);       \n      default:\n        return value;\n    }\n  }\n\n  return value;\n}\n\n\nexport function distanceTyping(prev, value) {\n  if (prev.length < value.length) {\n    if (!/\\d$/.test(value) || value.length > 4) {\n      return value.slice(0, value.length - 1);\n    } \n\n    switch (value.length) {\n      case 2:\n        return value + '.';      \n      case 3:\n        return value.slice(0, value.length - 1) + '.' + value[value.length - 1];\n      default:\n        return value;\n    }    \n  } \n\n  if (prev.length > value.length) {\n    switch (value.length) {\n      case 3:     \n        return value.slice(0, value.length - 1);              \n      default:\n        return value;\n    }\n  }\n\n  return value;\n}\n\nexport function dateToInt(str) {\n  if (!moment(str, 'DD.MM.YYYY').isValid()) {\n    return null;\n  }\n  return moment(str, 'DD.MM.YYYY').unix() * 1000;\n}\n\nexport function distanceToInt(str) {\n  let result = Number.parseFloat(str);\n  if(isNaN(result)) {\n    return null;\n  }\n\n  result = +result.toFixed(1);\n  if ((result < 0) || (result > 99.9)) {\n    result = null;\n  }\n\n  return result;\n}","import React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './WalkAddForm.css';\nimport DateInput from './DateInput';\nimport DistanceInput from './DistanceInput';\nimport WalkModel, { initForm } from '../models/WalkModel';\nimport { dateToText, distanceToText, dateTyping, distanceTyping, dateToInt, distanceToInt } from '../utils/utils';\n\nfunction WalkAddForm(props) {\n  const { form, onSubmit } = props;\n  const { id, date, distance } = form;\n\n  const [dateText, setDateText] = useState('');\n  const [distanceText, setDistanceText] = useState('');\n  const [prevState, setPrevState] = useState(initForm);\n  const [error, setError] = useState('');\n\n  if ((id !== prevState.id) || (date !== prevState.date) || (distance !== prevState.distance)) {\n    setPrevState(new WalkModel(id, date, distance));\n    setDateText(dateToText(date));\n    setDistanceText(distanceToText(distance, true));\n  }\n\n  const onDateChange = (value) => {\n    setDateText((prev) => dateTyping(prev, value));\n  }\n\n  const onDistanceChange = (value) => {\n    setDistanceText((prev) => distanceTyping(prev, value));\n  }\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n\n    const date = dateToInt(event.target.date.value);\n    if (date === null) {\n      setError('Введите корректную дату текущего столетия');\n      return;\n    }\n\n    const distance = distanceToInt(event.target.distance.value);\n    if (distance === null) {\n      setError('Введите дистанцию в диапазоне от 00.0 до 99.9 км');\n      return;\n    }\n\n    setError('');\n    setPrevState(new WalkModel(id, date, distance));\n\n    onSubmit({ id, date, distance });\n  }\n\n  return (<React.Fragment>\n    <form className=\"WalkAddForm\" onSubmit={onFormSubmit}>\n      <DateInput value={dateText} onChange={onDateChange} />\n      <DistanceInput value={distanceText} onChange={onDistanceChange} />\n      <button className=\"WalkAddForm-button\" type=\"submit\">OK</button>\n    </form>\n    {error && <p className=\"WalkAddForm-error\">{error}</p>}\n  </React.Fragment>);\n}\n\nWalkAddForm.propTypes = {\n  form: PropTypes.instanceOf(WalkModel).isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n\nexport default WalkAddForm;\n","import PropTypes from 'prop-types';\nimport './WalkString.css';\nimport WalkModel from '../models/WalkModel';\nimport { dateToText, distanceToText } from '../utils/utils';\n\nfunction WalkString(props) {\n  const { walk, onEditClick, onDeleteClick } = props;\n  const { id, date, distance} = walk;\n  \n  return (\n    <tr>\n      <td className=\"WalkString-cell WalkString-col1\">{dateToText(date)}</td>\n      <td className=\"WalkString-cell WalkString-col2\">{distanceToText(distance)}</td>\n      <td className=\"WalkString-cell WalkString-col3\">\n        <span className=\"WalkString-button\" onClick={() => onEditClick(id)}>&#x270E;</span>\n        <span>&nbsp;</span>\n        <span className=\"WalkString-button WalkString-delete\" onClick={() => onDeleteClick(id)}>&#x2718;</span>\n      </td>\n    </tr>\n  );\n}\n\nWalkString.propTypes = {\n  walk: PropTypes.instanceOf(WalkModel).isRequired,\n  onEditClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired\n};\n\nexport default WalkString;\n","import PropTypes from 'prop-types';\nimport './WalkList.css';\nimport WalkString from './WalkString';\nimport WalkModel from '../models/WalkModel';\n\nfunction WalkList(props) {\n  const { walks, onEditClick, onDeleteClick } = props;\n  \n  return !!walks.length && (\n    <div className=\"WalkList\">\n      <table>\n        <tbody>\n          <tr>\n            <td className=\"WalkList-cell WalkList-col1\">Дата (ДД.ММ.ГГГГ)</td>\n            <td className=\"WalkList-cell WalkList-col2\">Пройдено км</td>\n            <td className=\"WalkList-cell WalkList-col3\">Действия</td>\n          </tr>\n        </tbody>\n      </table>\n      <table className=\"WalkList-body\">\n        <tbody>\n          {walks.map((walk) => \n            <WalkString walk={walk} onEditClick={onEditClick} onDeleteClick={onDeleteClick} key={walk.id} />\n          )}\n        </tbody>\n      </table>\n    </div>  \n  );\n}\n\nWalkList.propTypes = {\n  walks: PropTypes.arrayOf(PropTypes.instanceOf(WalkModel)).isRequired,\n  onEditClick: PropTypes.func.isRequired,\n  onDeleteClick: PropTypes.func.isRequired\n};\n\nexport default WalkList;\n","export function findById(array, id) {\n  return array.findIndex((item) => item.id === id);\n}\n\nexport function findByDate(array, date) {\n  return array.findIndex((item) => item.date === date);\n}\n\nexport function sortByDate(array) {\n  return array.sort((item1, item2) => item2.date - item1.date);\n}\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport './Walks.css';\nimport WalkAddForm from './components/WalkAddForm';\nimport WalkList from './components/WalkList';\nimport WalkModel, { initForm } from './models/WalkModel';\nimport { findById, findByDate, sortByDate } from './utils/array';\n\nfunction Walks() {\n  const [walks, setWalks] = useState([]);\n  const [form, setForm] = useState(initForm);\n\n  const addWalk = ({ id, date, distance }) => {\n    setForm(initForm);\n    setWalks((prev) => {\n      const arr = [...prev];\n      if (id !== null) {\n        const index = findById(arr, id);\n        arr[index].date = date;\n        arr[index].distance = distance;\n        return sortByDate(arr);\n      }\n\n      const index = findByDate(arr, date);\n      if (index < 0) {\n        return sortByDate([...arr, new WalkModel(nanoid(), date, distance)]);\n      }\n\n      arr[index].distance += distance;\n      if (arr[index].distance > 99.9) {\n        arr[index].distance = 99.9;\n      }\n\n      return arr;\n    });\n  }\n\n  const editWalk = (id) => {\n    const index = findById(walks, id);\n    setForm(new WalkModel(id, walks[index].date, walks[index].distance)); \n  }\n\n  const deleteWalk = (id) => {\n    const index = findById(walks, id); \n    setForm(initForm);   \n    setWalks((prev) => {\n      const arr = [...prev];\n      arr.splice(index, 1);\n      return arr;\n    });\n  }\n\n  return (\n    <div className=\"Walks\">\n      <WalkAddForm form={form} onSubmit={addWalk} />\n      <WalkList walks={walks} onEditClick={editWalk} onDeleteClick={deleteWalk} />\n    </div>\n  );\n}\n\nexport default Walks;\n","import React from 'react';\nimport './App.css';\nimport ColorView from './task1/ColorView';\nimport Walks from './task2/Walks';\n\n\nfunction App() {\n  return (<React.Fragment>\n    <div className=\"task-1\">\n      <ColorView /> \n    </div>\n    <div className=\"task-2\">\n      <Walks /> \n    </div>\n  </React.Fragment>);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}